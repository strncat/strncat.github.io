I"ÿ<p style="text-align:center;"><img src="http://localhost:4000/assets/geometry/triangulation-algorithm/tri-0.png" width="80%" class="center" /></p>
<p>So far we discussed some theory behind triangultion. We proved the existence of a diagonal and triagulation for simple polygons. We also wrote code to verify for a given polygon $p$ and a given line segment $d$, whether $d$ is an internal diagonal or not. So where do we go from here to actually triangulate $p$?
<br />
<br />
<!------------------------------------------------------------------------------------></p>
<h4><b>The Naive Solution: Test All Candidates</b></h4>
<p>How many potentional cadidates for a diagonal do we have in a given polygon $p$ with $n$ vertices? Since the diagonal must intersect $p$ at its end points, then we know that the diagonalâ€™s start and end points must be from the $n$ vertices. This means that we have ${n \choose 2} = O(n^2)$ possible segments to test in the worst case. So now that we have a set of candidates, how do we proceed to test each candidate? We will need to verify the conditions we stated earlier. Letâ€™s start with the first condition and see how may test for it.
<br />
<br />
<!------------------------------------------------------------------------------------></p>
:ET