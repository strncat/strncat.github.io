I";<p>This one is pretty straightforward. The singleton design pattern is used whenever there is a class where only one object is allowed to exist at any time. <i>UIApplication</i> is one example that uses this pattern.
<br />
<br />
<!------------------------------------------------------------------------------------></p>
<h3>Example</h3>
<p>It is pretty straightforward as well to make a class with only one instance of itself. One way to do it is to create a static variable to hold the object and declare init to be private.</p>

<figure class="highlight"><pre><code class="language-c--" data-lang="c++"><span class="k">public</span> <span class="k">class</span> <span class="nc">Singleton</span> <span class="p">{</span>
    <span class="k">public</span> <span class="k">static</span> <span class="n">let</span> <span class="n">shared</span> <span class="o">=</span> <span class="n">Singleton</span><span class="p">()</span>
    <span class="k">private</span> <span class="n">init</span><span class="p">()</span> <span class="p">{</span> <span class="p">}</span>
<span class="p">}</span></code></pre></figure>

<p><br />
<!------------------------------------------------------------------------------------></p>
<h3>References</h3>
<ul>
  <li><a href="https://www.amazon.com/Design-Patterns-Elements-Reusable-Object-Oriented/dp/0201633612">Design Patterns</a></li>
  <li><a href="https://www.amazon.com/Cocoa-Design-Patterns-Erik-Buck/dp/0321535022">Cocoa Design Patterns (Book)</a></li>
  <li><a href="https://developer.apple.com/library/archive/documentation/Cocoa/Conceptual/CocoaFundamentals/CocoaDesignPatterns/CocoaDesignPatterns.html">Cocoa Design Patterns (Apple Docs)</a></li>
  <li><a href="https://www.raywenderlich.com/1941154-fundamental-ios-design-patterns/lessons/18">Fundamental iOS Design Patterns</a>
<br />
<br /></li>
</ul>

:ET